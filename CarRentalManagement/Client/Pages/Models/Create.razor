@page "/models/create/"
@inject HttpClient _client
@inject NavigationManager _navManager


<h3 class="card-title">Create New Models</h3>
<hr />
<br />

<!--
<EditForm Model="@model" OnValidSubmit="CreateModel">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class=" form-group">
        <label>Name: </label>
        <div>
            <InputText @bind-Value="@model.Name" class="form-control" />
            <ValidationMessage For="@(() => model.Name)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Model
    </button>
</EditForm>-->

<FormComponent ButtonText="Create Model" model="model" OnValidSubmit="@CreateModel" />

@code {
    Model model = new Model();

    private IList<Make> Makes;
    private IList<Model> Models;
    private IList<Colour> Colours;

    protected async override Task OnInitializedAsync()
    {
        Makes = await _client.GetFromJsonAsync<List<Make>>($"{Endpoints.MakesEndpoint}");
        Models = await _client.GetFromJsonAsync<List<Model>>($"{Endpoints.ModelsEndpoint}");
        Colours = await _client.GetFromJsonAsync<List<Colour>>($"{Endpoints.ColoursEndpoint}");

    }

    private async Task CreateModel()
    {
        await _client.PostAsJsonAsync(Endpoints.ModelsEndpoint, model);
        _navManager.NavigateTo("/models/");
    }
}